● {{.URL}}
├─Title: {{.Title}} ({{.AuthorLogin}})
├─PR #{{.Number}}
├─State: {{.State}}
├─Created: {{.CreatedAt}}
├─Status
│ ├─Approved: {{yesNo (hasLabel .Labels "approved")}}
│ ├─CI: {{ciStatus .StatusCheckRollup.Contexts.Nodes}}
│ ├─LGTM: {{yesNo (hasLabel .Labels "lgtm")}}
│ └─OK-to-test: {{yesNo (not (hasLabel .Labels "needs-ok-to-test"))}}
├─Labels
{{- if eq (len .Labels) 0}}
│ └─None
{{- else}}
{{- range $i, $label := .Labels}}
{{- if eq $i (sub (len $.Labels) 1)}}
│ └─{{$label}}
{{- else}}
│ ├─{{$label}}
{{- end}}
{{- end}}
{{- end}}
└─Checks
{{- if eq (len .StatusCheckRollup.Contexts.Nodes) 0}}
  └─None
{{- else}}
{{- $checksByStatus := groupChecksByStatus .StatusCheckRollup.Contexts.Nodes}}
{{- $statusOrder := slice "FAILURE" "PENDING" "SUCCESS"}}
{{- $totalGroups := countGroups $checksByStatus $statusOrder}}
{{- $groupIndex := 0}}
{{- range $status := $statusOrder}}
{{- $checks := index $checksByStatus $status}}
{{- if gt (len $checks) 0}}
{{- $groupIndex = add $groupIndex 1}}
{{- $groupPrefix := "├─"}}
{{- if eq $groupIndex $totalGroups}}{{$groupPrefix = "└─"}}{{end}}
  {{$groupPrefix}}{{$status}} ({{len $checks}})
{{- range $i, $check := $checks}}
{{- $itemPrefix := "│ ├─"}}
{{- if and (eq $groupIndex $totalGroups) (eq $i (sub (len $checks) 1))}}{{$itemPrefix = "  └─"}}
{{- else if eq $i (sub (len $checks) 1)}}{{$itemPrefix = "│ └─"}}{{end}}
{{- $name := checkName $check}}
{{- $url := checkURL $check}}
{{- if and $url (not $.NoHyperlinks) (supportsHyperlinks)}}
  {{$itemPrefix}}{{hyperlink $url $name}}
{{- else}}
  {{$itemPrefix}}{{$name}}
{{- if $url}}
{{- $urlPrefix := "│ │   └─"}}
{{- if and (eq $groupIndex $totalGroups) (eq $i (sub (len $checks) 1))}}{{$urlPrefix = "    └─"}}
{{- else if eq $i (sub (len $checks) 1)}}{{$urlPrefix = "│   └─"}}{{end}}
  {{$urlPrefix}}URL: {{$url}}
{{- end}}
{{- end}}
{{- if and $.ShowLogs (eq $status "FAILURE")}}
{{- $logs := fetchLogs $.PR $check}}
{{- if $logs}}
    │ Error logs:
{{$logs}}
{{- end}}
{{- end}}
{{- end}}
{{- end}}
{{- end}}
{{- range $status, $checks := $checksByStatus}}
{{- $found := false}}
{{- range $knownStatus := $statusOrder}}{{- if eq $status $knownStatus}}{{$found = true}}{{end}}{{end}}
{{- if and (not $found) (gt (len $checks) 0)}}
{{- $groupIndex = add $groupIndex 1}}
{{- $groupPrefix := "├─"}}
{{- if eq $groupIndex $totalGroups}}{{$groupPrefix = "└─"}}{{end}}
  {{$groupPrefix}}{{$status}} ({{len $checks}})
{{- range $i, $check := $checks}}
{{- $itemPrefix := "│ ├─"}}
{{- if eq $groupIndex $totalGroups}}
{{- if eq $i (sub (len $checks) 1)}}{{$itemPrefix = "  └─"}}{{else}}{{$itemPrefix = "  ├─"}}{{end}}
{{- else if eq $i (sub (len $checks) 1)}}{{$itemPrefix = "│ └─"}}{{end}}
{{- $name := checkName $check}}
{{- $url := checkURL $check}}
{{- if and $url (not $.NoHyperlinks) (supportsHyperlinks)}}
  {{$itemPrefix}}{{hyperlink $url $name}}
{{- else}}
  {{$itemPrefix}}{{$name}}
{{- if $url}}
{{- $urlPrefix := "│ │   └─"}}
{{- if eq $groupIndex $totalGroups}}
{{- if eq $i (sub (len $checks) 1)}}{{$urlPrefix = "    └─"}}{{else}}{{$urlPrefix = "  │   └─"}}{{end}}
{{- else if eq $i (sub (len $checks) 1)}}{{$urlPrefix = "│   └─"}}{{end}}
  {{$urlPrefix}}URL: {{$url}}
{{- end}}
{{- end}}
{{- if and $.ShowLogs (eq $status "FAILURE")}}
{{- $logs := fetchLogs $.PR $check}}
{{- if $logs}}
    │ Error logs:
{{$logs}}
{{- end}}
{{- end}}
{{- end}}
{{- end}}
{{- end}}
{{- end}}